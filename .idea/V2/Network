kubectl create namespace policy-test

kubectl -n ingress-nginx get svc

apiVersion: v1
kind: Pod
metadata:
  name: pod-ingress
  labels:
    app: pod-ingress
spec:
  containers:
  - name: mynginx
    image: nginx:latest
    ports:
      - containerPort: 80
    securityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
	  privileged: false

apiVersion: v1
kind: Pod
metadata:
  name: pod-egress
  labels:
    app: pod-egress
spec:
  containers:
  - name: mynginx
    image: nginx:latest
    ports:
      - containerPort: 80
    securityContext:
      runAsUser: 2000
      allowPrivilegeEscalation: false


apiVersion: v1
kind: Service
metadata:
  name: pod-ingress
  labels:
    app: pod-ingress
spec:
  type: NodePort
  selector:
    app: pod-ingress
  ports:
    - port: 80
      targetPort: 80



apiVersion: v1
kind: Service
metadata:
  name: pod-egress
  labels:
    app: pod-egress
spec:
  type: NodePort
  selector:
    app: pod-egress
  ports:
    - port: 80
      targetPort: 80



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pod-ingress
  namespace: policy-test
spec:
  ingressClassName: nginx
  rules:
  - host: 130.193.56.57.nip.io
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: pod-ingress
            port:
              number: 80
            name: pod-egress
            port:
              number: 80


kubectl exec -n policy-test pod-ingress -it -- /bin/sh

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: zero-trust
  namespace: policy-test
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress


kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  namespace: policy-test
  name: allow-ingress-controller
spec:
  podSelector:
    matchLabels:
      app: pod-ingress
  policyTypes:
  - Ingress
  ingress:
    - from:
      - namespaceSelector: {}


apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: policy-test
  name: allow-egress
spec:
  podSelector:
    matchLabels:
      app: pod-egress
  egress:
    - to:
      - namespaceSelector:
        podSelector:
          matchLabels:
            app: pod-ingress



apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: policy-test
  name: allow-ingress
spec:
  podSelector:
    matchLabels:
      app: pod-ingress
  egress:
    - to:
      - namespaceSelector:
        podSelector:
          matchLabels:
            app: pod-egress








